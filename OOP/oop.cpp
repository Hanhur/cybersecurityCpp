// Пример класса

/*
    class имя класса {
        закрытые методы (функции) и переменные класса
    puЬlic:
        открытые методы и переменные класса
    } [список объектов класса];

    Функции и переменные, объявленные внутри объявления класса, называют
    членами (members) класса. Чтобы не возникало путаницы, функции класса
    часто называют методами класса.

    Все члены класса, объявленные после служебного слова puЬlic, являются
    публичными (общедоступными)- их можно использовать, как и другим членам
    класса, так и в любой другой части программы, в которой находится
    этот класс.
*/

// Стек на С++

#include <iostream>
using namespace std;

const int SIZE = 26;

class stack
{
    char stck[SIZE];
    int tos;
    public:
        void init();
        void push(char ch);
        char pop();
};

void stack::init()
{
    tos = 0;
}

void stack::push(char ch)
{
    if(tos == SIZE)
    {
        cout << "Стек полон!" << endl;
        return;
    }

    stck[tos] = ch;
    tos++;
}

char stack::pop()
{
    if(tos == 0)
    {
        cout << "Стек пуст!" << endl;
        return 0;
    }

    tos--;
    return stck[tos];
}

int main()
{
    stack s1, s2;
    int i;

    s1.init();
    s2. init () ;
    s1 .push ('a');
    s2. push ('b') ;
    s1.push('c');
    s2. push ('d') ;
    s1. push ('e') ;
    s2. push ('f') ;

    for (i = 0; i < 3; i++) cout << s1.pop() << " ";
        cout << endl;
    for (i = 0; i < 3; i++) cout << s2.pop() << " ";
        cout << endl;
}

/*
    Теперь проанализируем программу. Класс stack содержит две приватных
    (закрытых) переменных stck и tos. Массив stck содержит символы, добавленные
    в стек, а tos содержит индекс вершины стека. Функция рор() выталкивает
    символ со стека, функция push() добавляет символ в стек, а функция
    init() инициализирует стек.

    Внутри функции main() мы создаем два стека - sl и s2, в который добавляем
    символы. Оба объекта стека абсолютно независимы друг от друга и нет
    никакого способа заставить стек sl повлиять на s2 и наоборот. У каждого
    объекта собственная копия членов stck и tos. Вы должны понимать, что хотя
    все объекты класса имеют общие функции-члены, каждый объект работает
    со своими собственными данными .
*/